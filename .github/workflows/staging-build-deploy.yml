name: Build and deploy app (staging)

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: false

on:
  workflow_dispatch: # on button click
  push:
    branches:
      - deployments/staging/makerdao

env:
  APP_NAME: connect
  CLUSTER_NAME: ${{ secrets.STAGING_CLUSTER_NAME }}
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.STAGING_AWS_REGION }}.amazonaws.com
  ENV: staging
  HELM_VALUES: deploy/values.yml
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }} # The base domain to use for the k8s endpoints

jobs:
  setup:
    name: Setup workflow
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.get_commit_hash.outputs.sha_short }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get commit hash
        id: get_commit_hash
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build:
    name: Build image
    runs-on: ubuntu-latest
    needs:
      - setup
    if: always() && !cancelled() && !failure() && !contains(github.event.head_commit.message , '[skip build]')
    env:
      ECR_REPO_NAME: connect-staging
      SHA_SHORT: ${{ needs.setup.outputs.sha_short }}

    steps:
      - name: Checkout all files
        id: checkout
        uses: actions/checkout@v4

      - name: Build, tag, and push image to ECR
        id: build_image
        uses: ./.github/actions/build
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
          VITE_ENABLED_EDITORS: ${{ secrets.VITE_ENABLED_EDITORS }}
          VITE_HIDE_DOCUMENT_MODEL_SELECTION_SETTINGS: true
          VITE_SEARCH_BAR_ENABLED: false
          VITE_LOCAL_DRIVES_ENABLED: false
          VITE_DISABLE_ADD_LOCAL_DRIVES: true
          VITE_DISABLE_DELETE_LOCAL_DRIVES: true
          VITE_CLOUD_DRIVES_ENABLED: false
          VITE_DISABLE_ADD_CLOUD_DRIVES: true
          VITE_DISABLE_DELETE_CLOUD_DRIVES: true
          VITE_DISABLE_ADD_PUBLIC_DRIVES: true
          VITE_DISABLE_DELETE_PUBLIC_DRIVES: true
          VITE_DEFAULT_DRIVES_URL: ${{ secrets.VITE_DEFAULT_DRIVES_URL }}
          VITE_RENOWN_URL: ${{ secrets.VITE_RENOWN_URL }}
          VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
          VITE_SENTRY_ENV: ${{ secrets.STAGING_VITE_SENTRY_ENV }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPO_NAME: ${{ env.ECR_REPO_NAME }}
          SHA_TAG: ${{ env.SHA_SHORT }}

  deploy:
    name: Deploy image
    runs-on: ubuntu-latest
    needs:
      - setup
      - build
    if: always() && !cancelled() && !failure() && !contains(github.event.head_commit.message , '[skip deploy]')
    env:
      ECR_REPO_NAME: connect-staging

    steps:
      - name: Checkout actions
        id: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          sparse-checkout: |
            .github

      - name: Deploy image to EKS
        id: deploy_image
        uses: ./.github/actions/deploy
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.STAGING_AWS_REGION }}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPO_NAME: ${{ env.ECR_REPO_NAME }}
          APP_NAME: ${{ env.APP_NAME }}
          ENDPOINT: ${{ env.APP_NAME }}-${{ env.ENV }}.${{ env.DOMAIN_NAME }}
          HELM_VALUES: ${{ env.HELM_VALUES }}
